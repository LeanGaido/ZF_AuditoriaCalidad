@page "/ParametrosGenerales"
@inject IRepositorio repositorio

<nav aria-label="breadcrumb">
    <ol class="breadcrumb" style="background-color: #047cc4;">
        <li class="breadcrumb-item active" aria-current="page" style="color:white"><h4 style="margin-bottom: 0;">Parametros Generales</h4></li>
    </ol>
</nav>

<ListadoGenerico Listado="ListadoParametrosGenerales">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Parametro</th>
                    <th>Valor</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListadoParametrosGenerales)
                {
                    <tr>
                        <td>
                            <a href="ParametrosGenerales/Editar/@item.ID" class="btn btn-success"><ion-icon name="create"></ion-icon></a>
                        </td>
                        <td>@item.Key</td>
                        <td>@item.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@*<Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
    PaginasTotales="paginasTotales"></Paginacion>*@

@code {
    public List<ParametroGeneral> ListadoParametrosGenerales { get; set; }
    private bool Mostrar = false;
    private string Titulo = "";
    private string PuntoAuditoriaTexto = "";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    //private int paginaActual = 1;
    //private int paginasTotales;



    protected async override Task OnInitializedAsync()
    {
        var responseHttpParametrosGenerales = await repositorio.Get<List<ParametroGeneral>>("api/parametrosgenerales");
        ListadoParametrosGenerales = responseHttpParametrosGenerales.Response;
        //await Cargar();
    }

    //private async Task paginaSeleccionada(int pagina)
    //{
    //    paginaActual = pagina;
    //    await Cargar(pagina);
    //}

    private async Task Cargar()
    {
        var responseHttp = await repositorio.Get<List<ParametroGeneral>>("api/parametrosgenerales");
        if (!responseHttp.Error)
        {
            ListadoParametrosGenerales = responseHttp.Response;
            //var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            //paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }
}