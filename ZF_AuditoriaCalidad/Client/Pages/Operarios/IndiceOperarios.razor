@page "/operarios"
@inject IRepositorio repositorio
@attribute [Authorize]
@inject HttpClientConToken Http

<nav aria-label="breadcrumb">
    <ol class="breadcrumb" style="background-color: #047cc4;">
        <li class="breadcrumb-item active" aria-current="page" style="color:white"><h4 style="margin-bottom: 0;">Operarios</h4></li>
    </ol>
</nav>

<ListadoGenerico Listado="Operarios">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Apellido y Nombre</th>
                    <th>Telefono</th>
                    <td>Email</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Operarios)
                {
                    <tr>
                        <td>
                            @*<a href="Auditorias/@item.ID" class="btn btn-success"><ion-icon name="folder-open"></ion-icon></a>*@
                            <AuthorizeView Roles="Administrador">
                                <button @onclick="@(() => BorrarOperario(item))" class="btn btn-danger"><ion-icon name="trash"></ion-icon></button>
                            </AuthorizeView>
                        </td>
                        <td>@item.ApellidoYNombre</td>
                        <td>@item.Telefono</td>
                        <td>@item.Email</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

<Confirmacion MostrarConfirmacion="Mostrar"
              Titulo="@Titulo"
              onCancel="@(() => CerrarConfirmacion())"
              onConfirm="@(() => ConfirmacionBorrarOperario(Operario))">
    <ChildContent>
        <div class="form-group">
            <label>Apellido y Nombre:</label>
            <div>
                <input readonly class="form-control" value="@Operario.ApellidoYNombre" />
            </div>
        </div>

        <div class="form-group">
            <label>Telefono:</label>
            <div>
                <input readonly class="form-control" value="@Operario.Telefono" />
            </div>
        </div>

        <div class="form-group">
            <label>Email:</label>
            <div>
                <input readonly class="form-control" value="@Operario.Email" />
            </div>
        </div>
    </ChildContent>
</Confirmacion>

@code {
    public List<Operario> Operarios { get; set; }
    private Operario Operario = new Operario();

    private bool Mostrar = false;
    private string Titulo = "";

    private async Task Cargar(int pagina = 1)
    {
        var responseHttp = await repositorio.Get<List<Operario>>($"api/operarios");
        if (!responseHttp.Error)
        {
            Operarios = responseHttp.Response;
            //var conteo = responseHttp.HttpResponseMessage.Headers.GetValues("conteo").FirstOrDefault();
            //paginasTotales = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
        }
    }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            await Cargar();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task CerrarConfirmacion()
    {
        Mostrar = false;
        Operario = null;
        Titulo = "";
    }

    private async Task BorrarOperario(Operario operario)
    {
        Titulo = "Esta seguro de eliminar este Operario?";
        Operario = operario;
        Mostrar = true;
    }

    async void ConfirmacionBorrarOperario(Operario operario)
    {
        if(operario != null)
        {
            var responseHttp = await repositorio.Delete($"api/operarios/{operario.ID}");
            if (!responseHttp.Error)
            {
                Mostrar = false;
                Operario = null;
                Titulo = "";
                await Cargar();
            }
            else
            {
                await Cargar();
            }
        }
        else
        {
            Mostrar = false;
            Operario = null;
            Titulo = "";
            await Cargar();
        }
    }
}
